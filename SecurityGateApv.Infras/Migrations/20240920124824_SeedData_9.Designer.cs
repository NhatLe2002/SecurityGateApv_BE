// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecurityGateApv.Infras.DBContext;

#nullable disable

namespace SecurityGateApv.Infras.Migrations
{
    [DbContext(typeof(SecurityGateApvDbContext))]
    [Migration("20240920124824_SeedData_9")]
    partial class SeedData_9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SecurityGateApv.Domain.Models.CredentialCardType", b =>
                {
                    b.Property<int>("CredentialCardTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CredentialCardTypeId"));

                    b.Property<string>("CredentialCardTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CredentialCardTypeId");

                    b.ToTable("CredentialCardTypes");

                    b.HasData(
                        new
                        {
                            CredentialCardTypeId = 1,
                            CredentialCardTypeName = "Giấy phép lái xe"
                        },
                        new
                        {
                            CredentialCardTypeId = 2,
                            CredentialCardTypeName = "Căn cước công dân"
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("AcceptLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            AcceptLevel = 3,
                            CreateDate = new DateTime(2024, 9, 10, 4, 26, 30, 689, DateTimeKind.Utc).AddTicks(5219),
                            DepartmentName = "Phòng IT",
                            Description = "Eveniet culpa illo veniam odit qui eaque voluptatum nisi.",
                            UpdatedDate = new DateTime(2024, 9, 10, 4, 26, 30, 689, DateTimeKind.Utc).AddTicks(5219)
                        },
                        new
                        {
                            DepartmentId = 2,
                            AcceptLevel = 1,
                            CreateDate = new DateTime(2024, 9, 9, 3, 0, 16, 76, DateTimeKind.Utc).AddTicks(9562),
                            DepartmentName = "Phòng Sản xuất",
                            Description = "Consequatur fuga ducimus nam aperiam quod illum.",
                            UpdatedDate = new DateTime(2024, 9, 9, 3, 0, 16, 76, DateTimeKind.Utc).AddTicks(9562)
                        },
                        new
                        {
                            DepartmentId = 3,
                            AcceptLevel = 3,
                            CreateDate = new DateTime(2024, 9, 12, 7, 10, 45, 613, DateTimeKind.Utc).AddTicks(9426),
                            DepartmentName = "Phòng Marketing",
                            Description = "Enim nesciunt distinctio est debitis fuga illo consectetur.",
                            UpdatedDate = new DateTime(2024, 9, 12, 7, 10, 45, 613, DateTimeKind.Utc).AddTicks(9426)
                        },
                        new
                        {
                            DepartmentId = 4,
                            AcceptLevel = 5,
                            CreateDate = new DateTime(2024, 9, 3, 8, 17, 38, 109, DateTimeKind.Utc).AddTicks(9333),
                            DepartmentName = "Phòng Sản xuất",
                            Description = "Voluptates omnis sunt.",
                            UpdatedDate = new DateTime(2024, 9, 3, 8, 17, 38, 109, DateTimeKind.Utc).AddTicks(9333)
                        },
                        new
                        {
                            DepartmentId = 5,
                            AcceptLevel = 1,
                            CreateDate = new DateTime(2024, 9, 7, 14, 15, 58, 121, DateTimeKind.Utc).AddTicks(7591),
                            DepartmentName = "Phòng Hành chính",
                            Description = "Consequatur nesciunt minima possimus veniam quia.",
                            UpdatedDate = new DateTime(2024, 9, 7, 14, 15, 58, 121, DateTimeKind.Utc).AddTicks(7591)
                        },
                        new
                        {
                            DepartmentId = 6,
                            AcceptLevel = 5,
                            CreateDate = new DateTime(2024, 9, 16, 15, 4, 4, 832, DateTimeKind.Utc).AddTicks(6401),
                            DepartmentName = "Phòng Marketing",
                            Description = "Est aperiam hic.",
                            UpdatedDate = new DateTime(2024, 9, 16, 15, 4, 4, 832, DateTimeKind.Utc).AddTicks(6401)
                        },
                        new
                        {
                            DepartmentId = 7,
                            AcceptLevel = 2,
                            CreateDate = new DateTime(2024, 9, 10, 14, 43, 46, 351, DateTimeKind.Utc).AddTicks(4240),
                            DepartmentName = "Phòng Nhân sự",
                            Description = "Ut fugiat eligendi voluptatem ab quod labore adipisci consequuntur sed.",
                            UpdatedDate = new DateTime(2024, 9, 10, 14, 43, 46, 351, DateTimeKind.Utc).AddTicks(4240)
                        },
                        new
                        {
                            DepartmentId = 8,
                            AcceptLevel = 2,
                            CreateDate = new DateTime(2024, 9, 13, 2, 28, 12, 904, DateTimeKind.Utc).AddTicks(9219),
                            DepartmentName = "Phòng Hành chính",
                            Description = "Pariatur modi nemo ut distinctio voluptatem sed voluptatem repellendus.",
                            UpdatedDate = new DateTime(2024, 9, 13, 2, 28, 12, 904, DateTimeKind.Utc).AddTicks(9219)
                        },
                        new
                        {
                            DepartmentId = 9,
                            AcceptLevel = 4,
                            CreateDate = new DateTime(2024, 9, 3, 15, 58, 53, 706, DateTimeKind.Utc).AddTicks(5232),
                            DepartmentName = "Phòng Hành chính",
                            Description = "Molestias eos in consequuntur reprehenderit modi incidunt ab quibusdam sed.",
                            UpdatedDate = new DateTime(2024, 9, 3, 15, 58, 53, 706, DateTimeKind.Utc).AddTicks(5232)
                        },
                        new
                        {
                            DepartmentId = 10,
                            AcceptLevel = 5,
                            CreateDate = new DateTime(2024, 9, 8, 13, 29, 7, 683, DateTimeKind.Utc).AddTicks(7023),
                            DepartmentName = "Phòng Sản xuất",
                            Description = "Magnam error et assumenda deserunt consequatur explicabo ut.",
                            UpdatedDate = new DateTime(2024, 9, 8, 13, 29, 7, 683, DateTimeKind.Utc).AddTicks(7023)
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.DepartmentReason", b =>
                {
                    b.Property<int>("DepartmentReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentReasonId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReasonId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentReasonId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ReasonId");

                    b.ToTable("DepartmentReasons");

                    b.HasData(
                        new
                        {
                            DepartmentReasonId = 1,
                            DepartmentId = 2,
                            Description = "Eos autem aut temporibus commodi quis quia ad doloremque ut.",
                            Name = "Generic Metal Shirt",
                            ReasonId = 3
                        },
                        new
                        {
                            DepartmentReasonId = 2,
                            DepartmentId = 2,
                            Description = "Nisi temporibus dolore aspernatur.",
                            Name = "Incredible Frozen Shoes",
                            ReasonId = 3
                        },
                        new
                        {
                            DepartmentReasonId = 3,
                            DepartmentId = 9,
                            Description = "Iste qui voluptatem ut deleniti maxime corporis delectus laboriosam.",
                            Name = "Ergonomic Concrete Bike",
                            ReasonId = 1
                        },
                        new
                        {
                            DepartmentReasonId = 4,
                            DepartmentId = 6,
                            Description = "Et quo quaerat ipsa et libero.",
                            Name = "Ergonomic Cotton Sausages",
                            ReasonId = 5
                        },
                        new
                        {
                            DepartmentReasonId = 5,
                            DepartmentId = 10,
                            Description = "Cumque saepe est est molestias id nobis rerum.",
                            Name = "Unbranded Plastic Chips",
                            ReasonId = 2
                        },
                        new
                        {
                            DepartmentReasonId = 6,
                            DepartmentId = 1,
                            Description = "Aut possimus sed voluptas ea occaecati voluptate expedita ut.",
                            Name = "Rustic Concrete Shirt",
                            ReasonId = 3
                        },
                        new
                        {
                            DepartmentReasonId = 7,
                            DepartmentId = 8,
                            Description = "Eius voluptatum repudiandae possimus.",
                            Name = "Incredible Concrete Salad",
                            ReasonId = 2
                        },
                        new
                        {
                            DepartmentReasonId = 8,
                            DepartmentId = 2,
                            Description = "Rem in alias sunt.",
                            Name = "Ergonomic Concrete Bike",
                            ReasonId = 5
                        },
                        new
                        {
                            DepartmentReasonId = 9,
                            DepartmentId = 1,
                            Description = "Quaerat qui est qui delectus quia id non quibusdam.",
                            Name = "Awesome Granite Bike",
                            ReasonId = 5
                        },
                        new
                        {
                            DepartmentReasonId = 10,
                            DepartmentId = 7,
                            Description = "Porro dolor in error amet voluptatum.",
                            Name = "Rustic Steel Chicken",
                            ReasonId = 4
                        },
                        new
                        {
                            DepartmentReasonId = 11,
                            DepartmentId = 7,
                            Description = "Itaque labore eligendi adipisci.",
                            Name = "Generic Plastic Computer",
                            ReasonId = 4
                        },
                        new
                        {
                            DepartmentReasonId = 12,
                            DepartmentId = 1,
                            Description = "Temporibus minus enim in voluptatem rerum alias.",
                            Name = "Rustic Soft Sausages",
                            ReasonId = 2
                        },
                        new
                        {
                            DepartmentReasonId = 13,
                            DepartmentId = 8,
                            Description = "Blanditiis molestias nesciunt et molestias sint quia inventore molestias sed.",
                            Name = "Licensed Frozen Chair",
                            ReasonId = 1
                        },
                        new
                        {
                            DepartmentReasonId = 14,
                            DepartmentId = 1,
                            Description = "Vel nesciunt itaque in nostrum iste.",
                            Name = "Intelligent Cotton Pizza",
                            ReasonId = 2
                        },
                        new
                        {
                            DepartmentReasonId = 15,
                            DepartmentId = 5,
                            Description = "Sint reiciendis quis odio aut illum.",
                            Name = "Practical Plastic Bacon",
                            ReasonId = 2
                        },
                        new
                        {
                            DepartmentReasonId = 16,
                            DepartmentId = 2,
                            Description = "Tempora quo alias et ut placeat eos molestiae voluptatum.",
                            Name = "Sleek Granite Gloves",
                            ReasonId = 3
                        },
                        new
                        {
                            DepartmentReasonId = 17,
                            DepartmentId = 4,
                            Description = "Consequatur temporibus sed commodi soluta aut natus iste impedit et.",
                            Name = "Ergonomic Rubber Sausages",
                            ReasonId = 3
                        },
                        new
                        {
                            DepartmentReasonId = 18,
                            DepartmentId = 10,
                            Description = "Qui culpa ex et.",
                            Name = "Intelligent Concrete Shoes",
                            ReasonId = 2
                        },
                        new
                        {
                            DepartmentReasonId = 19,
                            DepartmentId = 6,
                            Description = "Maxime vel atque dolores in officiis.",
                            Name = "Generic Soft Hat",
                            ReasonId = 2
                        },
                        new
                        {
                            DepartmentReasonId = 20,
                            DepartmentId = 3,
                            Description = "A repudiandae voluptatum.",
                            Name = "Awesome Steel Car",
                            ReasonId = 5
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Gate", b =>
                {
                    b.Property<int>("GateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GateId"));

                    b.Property<string>("GateCoordinate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GateId");

                    b.ToTable("Gates");

                    b.HasData(
                        new
                        {
                            GateId = 1,
                            GateCoordinate = "Ra vào trong ngày",
                            GateName = "Cổng 1"
                        },
                        new
                        {
                            GateId = 2,
                            GateCoordinate = "Ra vào trong ngày",
                            GateName = "Cổng 2"
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotificationID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.NotificationUsers", b =>
                {
                    b.Property<int>("NotificationUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationUserID"));

                    b.Property<int>("NotificationID")
                        .HasColumnType("int");

                    b.Property<bool>("ReadStatus")
                        .HasColumnType("bit");

                    b.Property<int>("ReceiverID")
                        .HasColumnType("int");

                    b.Property<int>("SenderID")
                        .HasColumnType("int");

                    b.HasKey("NotificationUserID");

                    b.HasIndex("NotificationID");

                    b.HasIndex("ReceiverID");

                    b.HasIndex("SenderID");

                    b.ToTable("NotificationUsers");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ProjectId");

                    b.HasIndex("CreateBy");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            CreateBy = 3,
                            CreateTime = new DateTime(2024, 9, 11, 22, 52, 31, 905, DateTimeKind.Unspecified).AddTicks(3854),
                            ProjectName = "Unbranded Steel Bacon",
                            Status = true
                        },
                        new
                        {
                            ProjectId = 2,
                            CreateBy = 3,
                            CreateTime = new DateTime(2024, 9, 11, 1, 19, 33, 761, DateTimeKind.Unspecified).AddTicks(1211),
                            ProjectName = "Unbranded Soft Hat",
                            Status = true
                        },
                        new
                        {
                            ProjectId = 3,
                            CreateBy = 3,
                            CreateTime = new DateTime(2024, 9, 12, 19, 9, 42, 170, DateTimeKind.Unspecified).AddTicks(3401),
                            ProjectName = "Tasty Plastic Shirt",
                            Status = true
                        },
                        new
                        {
                            ProjectId = 4,
                            CreateBy = 3,
                            CreateTime = new DateTime(2024, 9, 10, 21, 19, 39, 500, DateTimeKind.Unspecified).AddTicks(4372),
                            ProjectName = "Tasty Concrete Pants",
                            Status = true
                        },
                        new
                        {
                            ProjectId = 5,
                            CreateBy = 3,
                            CreateTime = new DateTime(2024, 9, 4, 21, 56, 56, 126, DateTimeKind.Unspecified).AddTicks(3555),
                            ProjectName = "Ergonomic Wooden Hat",
                            Status = true
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.QRCard", b =>
                {
                    b.Property<int>("QRCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QRCardId"));

                    b.Property<Guid>("CardGuidId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastCancelDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QRCardStatusId")
                        .HasColumnType("int");

                    b.Property<int>("QRCardTypeId")
                        .HasColumnType("int");

                    b.HasKey("QRCardId");

                    b.HasIndex("QRCardStatusId");

                    b.HasIndex("QRCardTypeId");

                    b.ToTable("QRCards");

                    b.HasData(
                        new
                        {
                            QRCardId = 1,
                            CardGuidId = new Guid("fcfb0bcc-d518-4085-876f-3ea91d62b56f"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1020),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1020),
                            QRCardStatusId = 2,
                            QRCardTypeId = 1
                        },
                        new
                        {
                            QRCardId = 2,
                            CardGuidId = new Guid("1e5815de-226b-4b71-840f-6106e52568b3"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1211),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1211),
                            QRCardStatusId = 2,
                            QRCardTypeId = 1
                        },
                        new
                        {
                            QRCardId = 3,
                            CardGuidId = new Guid("44fffa77-db0a-4cca-b23c-f5568f80b193"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1224),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1224),
                            QRCardStatusId = 2,
                            QRCardTypeId = 2
                        },
                        new
                        {
                            QRCardId = 4,
                            CardGuidId = new Guid("78774d5e-3084-4fc3-bca4-2f3e02a9ce07"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1233),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1233),
                            QRCardStatusId = 2,
                            QRCardTypeId = 1
                        },
                        new
                        {
                            QRCardId = 5,
                            CardGuidId = new Guid("c590675c-ea3e-4663-8725-e1b0dd006f01"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1251),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1251),
                            QRCardStatusId = 1,
                            QRCardTypeId = 2
                        },
                        new
                        {
                            QRCardId = 6,
                            CardGuidId = new Guid("3a72cf98-5da6-4a99-90c1-c19a5ab971e4"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1259),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1259),
                            QRCardStatusId = 1,
                            QRCardTypeId = 1
                        },
                        new
                        {
                            QRCardId = 7,
                            CardGuidId = new Guid("db04521d-3196-446c-b4f9-83b9979df3bd"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1266),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1266),
                            QRCardStatusId = 2,
                            QRCardTypeId = 2
                        },
                        new
                        {
                            QRCardId = 8,
                            CardGuidId = new Guid("50cf87c8-bd64-413c-bd0e-900c2cbdac8c"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1273),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1273),
                            QRCardStatusId = 2,
                            QRCardTypeId = 2
                        },
                        new
                        {
                            QRCardId = 9,
                            CardGuidId = new Guid("c7802cd1-c959-4c9d-a51d-48e4c7f5cbc8"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1279),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1279),
                            QRCardStatusId = 2,
                            QRCardTypeId = 1
                        },
                        new
                        {
                            QRCardId = 10,
                            CardGuidId = new Guid("a789af1e-1625-4a75-bb29-85058b0c0ef8"),
                            CreateDate = new DateTime(2024, 9, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1286),
                            LastCancelDate = new DateTime(2024, 10, 20, 19, 48, 23, 929, DateTimeKind.Local).AddTicks(1286),
                            QRCardStatusId = 2,
                            QRCardTypeId = 2
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.QRCardStatus", b =>
                {
                    b.Property<int>("QRCardStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QRCardStatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusNumber")
                        .HasColumnType("int");

                    b.HasKey("QRCardStatusId");

                    b.ToTable("QRCardStatus");

                    b.HasData(
                        new
                        {
                            QRCardStatusId = 1,
                            StatusName = "Active",
                            StatusNumber = 1
                        },
                        new
                        {
                            QRCardStatusId = 2,
                            StatusName = "Inactive",
                            StatusNumber = 0
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.QRCardType", b =>
                {
                    b.Property<int>("QRCardTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QRCardTypeId"));

                    b.Property<string>("CardTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QRCardTypeId");

                    b.ToTable("QRCardType");

                    b.HasData(
                        new
                        {
                            QRCardTypeId = 1,
                            CardTypeName = "Employee",
                            TypeDescription = "Employee QR Card"
                        },
                        new
                        {
                            QRCardTypeId = 2,
                            CardTypeName = "Visitor",
                            TypeDescription = "Visitor QR Card"
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Reason", b =>
                {
                    b.Property<int>("ReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReasonId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReasonId");

                    b.ToTable("Reasons");

                    b.HasData(
                        new
                        {
                            ReasonId = 1,
                            Description = "Labore quidem dolore minus aut ad.",
                            ReasonName = "Refined Metal Soap"
                        },
                        new
                        {
                            ReasonId = 2,
                            Description = "Ut quisquam voluptates assumenda tempore nihil eaque.",
                            ReasonName = "Unbranded Frozen Fish"
                        },
                        new
                        {
                            ReasonId = 3,
                            Description = "Eaque magnam dicta.",
                            ReasonName = "Intelligent Plastic Chips"
                        },
                        new
                        {
                            ReasonId = 4,
                            Description = "Soluta illum debitis quia.",
                            ReasonName = "Small Soft Bacon"
                        },
                        new
                        {
                            ReasonId = 5,
                            Description = "Recusandae natus aut.",
                            ReasonName = "Sleek Plastic Keyboard"
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Description = "Quản lý toàn bộ hệ thống",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Description = "Quản lý toàn bộ công ty",
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleId = 3,
                            Description = "Quản lý toàn bộ phòng ban",
                            RoleName = "DepartmentManaager"
                        },
                        new
                        {
                            RoleId = 4,
                            Description = "Tạo và quản lý khách ra vào của phòng ban",
                            RoleName = "Staff"
                        },
                        new
                        {
                            RoleId = 5,
                            Description = "Quản lý khách ra vào tại cổng",
                            RoleName = "Security"
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2024, 3, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3291),
                            Email = "admin1@example.com",
                            FullName = "Admin One",
                            Password = "123",
                            PhoneNumber = "0123456789",
                            RoleId = 1,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3303),
                            UserName = "admin1"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedDate = new DateTime(2024, 6, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3306),
                            Email = "manager1@example.com",
                            FullName = "Manager One",
                            Password = "123",
                            PhoneNumber = "0987654321",
                            RoleId = 2,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3307),
                            UserName = "manager1"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedDate = new DateTime(2024, 7, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3309),
                            Email = "employee1@example.com",
                            FullName = "Department Manager One",
                            Password = "123",
                            PhoneNumber = "0112223334",
                            RoleId = 3,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3310),
                            UserName = "DM1"
                        },
                        new
                        {
                            UserId = 4,
                            CreatedDate = new DateTime(2024, 8, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3311),
                            Email = "hr1@example.com",
                            FullName = "Staff One",
                            Password = "123",
                            PhoneNumber = "0223334445",
                            RoleId = 4,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3312),
                            UserName = "Staff1"
                        },
                        new
                        {
                            UserId = 5,
                            CreatedDate = new DateTime(2024, 5, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3313),
                            Email = "it1@example.com",
                            FullName = "Security One",
                            Password = "123",
                            PhoneNumber = "0334445556",
                            RoleId = 5,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 20, 12, 48, 23, 912, DateTimeKind.Utc).AddTicks(3314),
                            UserName = "Security1"
                        },
                        new
                        {
                            UserId = 6,
                            CreatedDate = new DateTime(2024, 9, 4, 14, 52, 30, 896, DateTimeKind.Unspecified).AddTicks(5047),
                            Email = "gmail.com.Rath3@hotmail.com",
                            FullName = "Dayana Murray",
                            Password = "1jgari",
                            PhoneNumber = "0494709628",
                            RoleId = 3,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 4, 14, 52, 30, 896, DateTimeKind.Unspecified).AddTicks(5047),
                            UserName = "Amos14"
                        },
                        new
                        {
                            UserId = 7,
                            CreatedDate = new DateTime(2024, 9, 8, 1, 36, 45, 93, DateTimeKind.Unspecified).AddTicks(3087),
                            Email = "gmail.com.Champlin48@yahoo.com",
                            FullName = "Lily Ritchie",
                            Password = "v1atiw",
                            PhoneNumber = "0786469089",
                            RoleId = 2,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 8, 1, 36, 45, 93, DateTimeKind.Unspecified).AddTicks(3087),
                            UserName = "Joanny24"
                        },
                        new
                        {
                            UserId = 8,
                            CreatedDate = new DateTime(2024, 9, 1, 18, 50, 19, 452, DateTimeKind.Unspecified).AddTicks(9756),
                            Email = "gmail.com17@gmail.com",
                            FullName = "Maximilian Effertz",
                            Password = "9gy1mm",
                            PhoneNumber = "0819469217",
                            RoleId = 4,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 1, 18, 50, 19, 452, DateTimeKind.Unspecified).AddTicks(9756),
                            UserName = "Kyra_Bauch48"
                        },
                        new
                        {
                            UserId = 9,
                            CreatedDate = new DateTime(2024, 9, 6, 16, 38, 3, 483, DateTimeKind.Unspecified).AddTicks(3801),
                            Email = "gmail.com31@hotmail.com",
                            FullName = "Bettie Reichert",
                            Password = "0j8sb7",
                            PhoneNumber = "0397173325",
                            RoleId = 2,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 6, 16, 38, 3, 483, DateTimeKind.Unspecified).AddTicks(3801),
                            UserName = "Rosella.Goldner97"
                        },
                        new
                        {
                            UserId = 10,
                            CreatedDate = new DateTime(2024, 9, 15, 21, 32, 35, 64, DateTimeKind.Unspecified).AddTicks(4127),
                            Email = "gmail.com.Gislason@hotmail.com",
                            FullName = "Audra Pacocha",
                            Password = "58p1j3",
                            PhoneNumber = "0533310956",
                            RoleId = 2,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 15, 21, 32, 35, 64, DateTimeKind.Unspecified).AddTicks(4127),
                            UserName = "Tod_Purdy10"
                        },
                        new
                        {
                            UserId = 11,
                            CreatedDate = new DateTime(2024, 9, 19, 12, 9, 20, 839, DateTimeKind.Unspecified).AddTicks(7512),
                            Email = "gmail.com4@gmail.com",
                            FullName = "Birdie Kuhlman",
                            Password = "nohzw1",
                            PhoneNumber = "0154790706",
                            RoleId = 4,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 19, 12, 9, 20, 839, DateTimeKind.Unspecified).AddTicks(7512),
                            UserName = "Mohammad_Turcotte"
                        },
                        new
                        {
                            UserId = 12,
                            CreatedDate = new DateTime(2024, 9, 15, 7, 16, 43, 35, DateTimeKind.Unspecified).AddTicks(7933),
                            Email = "gmail.com.Swaniawski@hotmail.com",
                            FullName = "Fabiola Williamson",
                            Password = "sro2o6",
                            PhoneNumber = "0319271086",
                            RoleId = 1,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 15, 7, 16, 43, 35, DateTimeKind.Unspecified).AddTicks(7933),
                            UserName = "Kirsten68"
                        },
                        new
                        {
                            UserId = 13,
                            CreatedDate = new DateTime(2024, 9, 17, 2, 13, 48, 488, DateTimeKind.Unspecified).AddTicks(7596),
                            Email = "gmail.com.Gutkowski37@gmail.com",
                            FullName = "Veda D'Amore",
                            Password = "zocg54",
                            PhoneNumber = "0753983410",
                            RoleId = 4,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 17, 2, 13, 48, 488, DateTimeKind.Unspecified).AddTicks(7596),
                            UserName = "Bartholome.Konopelski"
                        },
                        new
                        {
                            UserId = 14,
                            CreatedDate = new DateTime(2024, 9, 16, 17, 20, 42, 737, DateTimeKind.Unspecified).AddTicks(5738),
                            Email = "gmail.com.Graham84@hotmail.com",
                            FullName = "Garrison Kreiger",
                            Password = "kuaywz",
                            PhoneNumber = "0224259543",
                            RoleId = 1,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 16, 17, 20, 42, 737, DateTimeKind.Unspecified).AddTicks(5738),
                            UserName = "Paige.Hodkiewicz"
                        },
                        new
                        {
                            UserId = 15,
                            CreatedDate = new DateTime(2024, 9, 8, 11, 6, 3, 303, DateTimeKind.Unspecified).AddTicks(1951),
                            Email = "gmail.com74@gmail.com",
                            FullName = "Roxane Graham",
                            Password = "5geyd0",
                            PhoneNumber = "0384796402",
                            RoleId = 4,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 8, 11, 6, 3, 303, DateTimeKind.Unspecified).AddTicks(1951),
                            UserName = "Amparo.Shields"
                        },
                        new
                        {
                            UserId = 16,
                            CreatedDate = new DateTime(2024, 9, 8, 18, 38, 9, 80, DateTimeKind.Unspecified).AddTicks(4890),
                            Email = "gmail.com18@yahoo.com",
                            FullName = "Evans Stracke",
                            Password = "nnmw5q",
                            PhoneNumber = "0997319411",
                            RoleId = 4,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 8, 18, 38, 9, 80, DateTimeKind.Unspecified).AddTicks(4890),
                            UserName = "Reed_Terry"
                        },
                        new
                        {
                            UserId = 17,
                            CreatedDate = new DateTime(2024, 9, 6, 21, 47, 57, 504, DateTimeKind.Unspecified).AddTicks(41),
                            Email = "gmail.com.Beatty@hotmail.com",
                            FullName = "Madyson Schulist",
                            Password = "cip2bu",
                            PhoneNumber = "0456142837",
                            RoleId = 3,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 6, 21, 47, 57, 504, DateTimeKind.Unspecified).AddTicks(41),
                            UserName = "Wallace_Okuneva"
                        },
                        new
                        {
                            UserId = 18,
                            CreatedDate = new DateTime(2024, 9, 12, 17, 55, 21, 113, DateTimeKind.Unspecified).AddTicks(4356),
                            Email = "gmail.com34@gmail.com",
                            FullName = "Shana Hilll",
                            Password = "wctrv4",
                            PhoneNumber = "0608570233",
                            RoleId = 4,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 12, 17, 55, 21, 113, DateTimeKind.Unspecified).AddTicks(4356),
                            UserName = "Grayson50"
                        },
                        new
                        {
                            UserId = 19,
                            CreatedDate = new DateTime(2024, 9, 17, 4, 22, 4, 488, DateTimeKind.Unspecified).AddTicks(8766),
                            Email = "gmail.com.Gaylord91@gmail.com",
                            FullName = "Zackary Predovic",
                            Password = "bybcp7",
                            PhoneNumber = "0645931406",
                            RoleId = 2,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 17, 4, 22, 4, 488, DateTimeKind.Unspecified).AddTicks(8766),
                            UserName = "Kiara_Metz43"
                        },
                        new
                        {
                            UserId = 20,
                            CreatedDate = new DateTime(2024, 9, 14, 17, 22, 13, 645, DateTimeKind.Unspecified).AddTicks(6684),
                            Email = "gmail.com_Bins@gmail.com",
                            FullName = "Chase Gorczany",
                            Password = "ne3mj2",
                            PhoneNumber = "0966827236",
                            RoleId = 5,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 14, 17, 22, 13, 645, DateTimeKind.Unspecified).AddTicks(6684),
                            UserName = "Roel87"
                        },
                        new
                        {
                            UserId = 21,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 38, 50, 178, DateTimeKind.Unspecified).AddTicks(1336),
                            Email = "gmail.com.Mante59@yahoo.com",
                            FullName = "Itzel Bins",
                            Password = "2f9wml",
                            PhoneNumber = "0895515644",
                            RoleId = 4,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 4, 0, 38, 50, 178, DateTimeKind.Unspecified).AddTicks(1336),
                            UserName = "Lavonne75"
                        },
                        new
                        {
                            UserId = 22,
                            CreatedDate = new DateTime(2024, 9, 14, 13, 21, 14, 462, DateTimeKind.Unspecified).AddTicks(1692),
                            Email = "gmail.com.Johnston27@gmail.com",
                            FullName = "Ebba Koch",
                            Password = "ftd83g",
                            PhoneNumber = "0626378941",
                            RoleId = 5,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 14, 13, 21, 14, 462, DateTimeKind.Unspecified).AddTicks(1692),
                            UserName = "Berenice.Jones56"
                        },
                        new
                        {
                            UserId = 23,
                            CreatedDate = new DateTime(2024, 9, 15, 18, 51, 27, 714, DateTimeKind.Unspecified).AddTicks(4774),
                            Email = "gmail.com11@gmail.com",
                            FullName = "Kitty Turner",
                            Password = "8e3x59",
                            PhoneNumber = "0779918618",
                            RoleId = 1,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 15, 18, 51, 27, 714, DateTimeKind.Unspecified).AddTicks(4774),
                            UserName = "Thea_Stokes"
                        },
                        new
                        {
                            UserId = 24,
                            CreatedDate = new DateTime(2024, 9, 9, 13, 14, 43, 338, DateTimeKind.Unspecified).AddTicks(5864),
                            Email = "gmail.com.Bosco@hotmail.com",
                            FullName = "Eladio VonRueden",
                            Password = "4r0djy",
                            PhoneNumber = "0236678624",
                            RoleId = 1,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 9, 13, 14, 43, 338, DateTimeKind.Unspecified).AddTicks(5864),
                            UserName = "Eldred70"
                        },
                        new
                        {
                            UserId = 25,
                            CreatedDate = new DateTime(2024, 9, 1, 18, 3, 43, 870, DateTimeKind.Unspecified).AddTicks(1452),
                            Email = "gmail.com82@hotmail.com",
                            FullName = "Jaylan Wiegand",
                            Password = "1476hj",
                            PhoneNumber = "0600037343",
                            RoleId = 5,
                            Status = "Active",
                            UpdatedDate = new DateTime(2024, 9, 1, 18, 3, 43, 870, DateTimeKind.Unspecified).AddTicks(1452),
                            UserName = "Felicia.Bailey21"
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.UserDepartment", b =>
                {
                    b.Property<int>("UserDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserDepartmentId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserDepartmentId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDepartments");

                    b.HasData(
                        new
                        {
                            UserDepartmentId = 1,
                            DepartmentId = 7,
                            UserId = 1
                        },
                        new
                        {
                            UserDepartmentId = 2,
                            DepartmentId = 7,
                            UserId = 10
                        },
                        new
                        {
                            UserDepartmentId = 3,
                            DepartmentId = 9,
                            UserId = 9
                        },
                        new
                        {
                            UserDepartmentId = 4,
                            DepartmentId = 2,
                            UserId = 10
                        },
                        new
                        {
                            UserDepartmentId = 5,
                            DepartmentId = 1,
                            UserId = 21
                        },
                        new
                        {
                            UserDepartmentId = 6,
                            DepartmentId = 10,
                            UserId = 11
                        },
                        new
                        {
                            UserDepartmentId = 7,
                            DepartmentId = 1,
                            UserId = 3
                        },
                        new
                        {
                            UserDepartmentId = 8,
                            DepartmentId = 5,
                            UserId = 13
                        },
                        new
                        {
                            UserDepartmentId = 9,
                            DepartmentId = 8,
                            UserId = 14
                        },
                        new
                        {
                            UserDepartmentId = 10,
                            DepartmentId = 1,
                            UserId = 18
                        },
                        new
                        {
                            UserDepartmentId = 11,
                            DepartmentId = 4,
                            UserId = 2
                        },
                        new
                        {
                            UserDepartmentId = 12,
                            DepartmentId = 1,
                            UserId = 14
                        },
                        new
                        {
                            UserDepartmentId = 13,
                            DepartmentId = 6,
                            UserId = 23
                        },
                        new
                        {
                            UserDepartmentId = 14,
                            DepartmentId = 4,
                            UserId = 21
                        },
                        new
                        {
                            UserDepartmentId = 15,
                            DepartmentId = 9,
                            UserId = 14
                        },
                        new
                        {
                            UserDepartmentId = 16,
                            DepartmentId = 8,
                            UserId = 12
                        },
                        new
                        {
                            UserDepartmentId = 17,
                            DepartmentId = 9,
                            UserId = 21
                        },
                        new
                        {
                            UserDepartmentId = 18,
                            DepartmentId = 4,
                            UserId = 24
                        },
                        new
                        {
                            UserDepartmentId = 19,
                            DepartmentId = 9,
                            UserId = 10
                        },
                        new
                        {
                            UserDepartmentId = 20,
                            DepartmentId = 1,
                            UserId = 13
                        },
                        new
                        {
                            UserDepartmentId = 21,
                            DepartmentId = 5,
                            UserId = 20
                        },
                        new
                        {
                            UserDepartmentId = 22,
                            DepartmentId = 3,
                            UserId = 10
                        },
                        new
                        {
                            UserDepartmentId = 23,
                            DepartmentId = 10,
                            UserId = 5
                        },
                        new
                        {
                            UserDepartmentId = 24,
                            DepartmentId = 6,
                            UserId = 19
                        },
                        new
                        {
                            UserDepartmentId = 25,
                            DepartmentId = 8,
                            UserId = 13
                        },
                        new
                        {
                            UserDepartmentId = 26,
                            DepartmentId = 9,
                            UserId = 5
                        },
                        new
                        {
                            UserDepartmentId = 27,
                            DepartmentId = 2,
                            UserId = 25
                        },
                        new
                        {
                            UserDepartmentId = 28,
                            DepartmentId = 5,
                            UserId = 7
                        },
                        new
                        {
                            UserDepartmentId = 29,
                            DepartmentId = 1,
                            UserId = 22
                        },
                        new
                        {
                            UserDepartmentId = 30,
                            DepartmentId = 3,
                            UserId = 23
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VehicleSession", b =>
                {
                    b.Property<int>("VehicleSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleSessionId"));

                    b.Property<DateTime>("CheckinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GateId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityID")
                        .HasColumnType("int");

                    b.Property<int>("VisitDetailId")
                        .HasColumnType("int");

                    b.HasKey("VehicleSessionId");

                    b.HasIndex("GateId");

                    b.HasIndex("SecurityID");

                    b.HasIndex("VisitDetailId");

                    b.ToTable("VehicleSessions");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VehicleSessionImage", b =>
                {
                    b.Property<int>("VehicleSessionImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleSessionImageId"));

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleSessionId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleSessionImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleSessionImageId");

                    b.HasIndex("VehicleSessionId");

                    b.ToTable("VehicleSessionImages");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Visit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"));

                    b.Property<int>("AcceptLevel")
                        .HasColumnType("int");

                    b.Property<int>("CreateById")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentReasonId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateById")
                        .HasColumnType("int");

                    b.Property<int>("VisitQuantity")
                        .HasColumnType("int");

                    b.HasKey("VisitId");

                    b.HasIndex("CreateById");

                    b.HasIndex("DepartmentReasonId");

                    b.HasIndex("UpdateById");

                    b.ToTable("Visits");

                    b.HasData(
                        new
                        {
                            VisitId = 1,
                            AcceptLevel = 1,
                            CreateById = 4,
                            DateRegister = new DateTime(2024, 9, 14, 1, 21, 37, 434, DateTimeKind.Unspecified).AddTicks(5563),
                            DepartmentReasonId = 1,
                            UpdateById = 4,
                            VisitQuantity = 6
                        },
                        new
                        {
                            VisitId = 2,
                            AcceptLevel = 1,
                            CreateById = 4,
                            DateRegister = new DateTime(2024, 9, 6, 5, 32, 46, 885, DateTimeKind.Unspecified).AddTicks(1179),
                            DepartmentReasonId = 1,
                            UpdateById = 4,
                            VisitQuantity = 4
                        },
                        new
                        {
                            VisitId = 3,
                            AcceptLevel = 2,
                            CreateById = 4,
                            DateRegister = new DateTime(2024, 9, 9, 12, 49, 55, 578, DateTimeKind.Unspecified).AddTicks(2190),
                            DepartmentReasonId = 5,
                            UpdateById = 4,
                            VisitQuantity = 2
                        },
                        new
                        {
                            VisitId = 4,
                            AcceptLevel = 3,
                            CreateById = 4,
                            DateRegister = new DateTime(2024, 9, 9, 22, 49, 6, 451, DateTimeKind.Unspecified).AddTicks(1959),
                            DepartmentReasonId = 2,
                            UpdateById = 4,
                            VisitQuantity = 1
                        },
                        new
                        {
                            VisitId = 5,
                            AcceptLevel = 2,
                            CreateById = 4,
                            DateRegister = new DateTime(2024, 9, 1, 1, 42, 46, 637, DateTimeKind.Unspecified).AddTicks(618),
                            DepartmentReasonId = 3,
                            UpdateById = 4,
                            VisitQuantity = 3
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitDetail", b =>
                {
                    b.Property<int>("VisitDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitDetailId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedTimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedTimeOut")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("VisitDetailName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.Property<int>("VisitorId")
                        .HasColumnType("int");

                    b.HasKey("VisitDetailId");

                    b.HasIndex("VisitId");

                    b.HasIndex("VisitorId");

                    b.ToTable("VisitDetails");

                    b.HasData(
                        new
                        {
                            VisitDetailId = 1,
                            Description = "Accusantium aut quis neque beatae saepe debitis adipisci. Doloremque nobis dolore perspiciatis aut eos nesciunt quo tenetur aut. Maiores ad quis atque inventore doloribus et fugiat. Ut occaecati illum est aut velit accusamus autem soluta ullam.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(6994),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(7039),
                            Status = false,
                            VisitDetailName = "Rustic Granite Bacon",
                            VisitId = 1,
                            VisitorId = 9
                        },
                        new
                        {
                            VisitDetailId = 2,
                            Description = "Qui placeat cupiditate illo delectus. Voluptates quidem impedit. Aut omnis at. Consequuntur maiores quas architecto fuga. Perspiciatis cupiditate et tempore alias autem.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8115),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8121),
                            Status = false,
                            VisitDetailName = "Awesome Granite Bacon",
                            VisitId = 2,
                            VisitorId = 1
                        },
                        new
                        {
                            VisitDetailId = 3,
                            Description = "Accusamus ea asperiores harum. Illum nostrum nisi sequi. Incidunt quo sed et illum. Vel tenetur fugit excepturi aut et nihil et autem magnam.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8223),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8225),
                            Status = true,
                            VisitDetailName = "Incredible Concrete Keyboard",
                            VisitId = 4,
                            VisitorId = 1
                        },
                        new
                        {
                            VisitDetailId = 4,
                            Description = "Magni ut mollitia possimus voluptatibus. Laudantium iusto ut eum et libero quo enim reprehenderit. Dolor incidunt architecto autem. Nam nam sit modi minima corrupti quas dolorem.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8326),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8328),
                            Status = false,
                            VisitDetailName = "Incredible Plastic Car",
                            VisitId = 5,
                            VisitorId = 6
                        },
                        new
                        {
                            VisitDetailId = 5,
                            Description = "Atque optio totam autem et nulla et. Qui quibusdam voluptatibus et velit sed voluptatem et quasi. Ea porro provident nulla aut aperiam mollitia exercitationem aperiam occaecati.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8416),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8417),
                            Status = false,
                            VisitDetailName = "Rustic Concrete Shirt",
                            VisitId = 4,
                            VisitorId = 1
                        },
                        new
                        {
                            VisitDetailId = 6,
                            Description = "Deleniti neque quos corporis sed qui minima sapiente. Aut ut ut. Esse id consequatur. Voluptas exercitationem totam dolorum laboriosam aut et pariatur aut architecto. Quasi voluptatum rerum numquam odio est. Illum aut repellendus velit odit vero tempora.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8545),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8547),
                            Status = true,
                            VisitDetailName = "Ergonomic Wooden Table",
                            VisitId = 1,
                            VisitorId = 1
                        },
                        new
                        {
                            VisitDetailId = 7,
                            Description = "In vitae perspiciatis facilis aut nulla sint reprehenderit. At officia ut quaerat maxime tempore. Asperiores sint nam ut. Voluptatibus eveniet enim. Eaque et distinctio vel non a et eos minima. Sapiente nihil sit dolor.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8664),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8666),
                            Status = false,
                            VisitDetailName = "Refined Concrete Shoes",
                            VisitId = 5,
                            VisitorId = 1
                        },
                        new
                        {
                            VisitDetailId = 8,
                            Description = "Quisquam voluptatem iste est eum minus saepe quia libero sit. Hic eos voluptate nihil maiores nisi. Beatae voluptatem voluptatum vero labore.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8739),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8741),
                            Status = true,
                            VisitDetailName = "Refined Frozen Tuna",
                            VisitId = 2,
                            VisitorId = 1
                        },
                        new
                        {
                            VisitDetailId = 9,
                            Description = "Et facere et expedita qui vitae sunt. Quo illo deleniti repellat dignissimos qui est voluptate dicta. Vero dolores itaque odit modi laborum harum.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8824),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8826),
                            Status = false,
                            VisitDetailName = "Intelligent Rubber Table",
                            VisitId = 2,
                            VisitorId = 6
                        },
                        new
                        {
                            VisitDetailId = 10,
                            Description = "Laudantium nam consequatur. Aliquam harum modi recusandae et. Cupiditate suscipit nam omnis nisi et dolor quis ab illum. Qui repellat dolores nisi. Explicabo sed quis et repellendus asperiores ea exercitationem tempora. Laboriosam qui et ratione molestias unde fugit molestiae eveniet itaque.",
                            ExpectedTimeIn = new DateTime(2024, 9, 21, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8966),
                            ExpectedTimeOut = new DateTime(2024, 9, 22, 19, 48, 23, 927, DateTimeKind.Local).AddTicks(8967),
                            Status = true,
                            VisitDetailName = "Unbranded Soft Shoes",
                            VisitId = 2,
                            VisitorId = 4
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitProject", b =>
                {
                    b.Property<int>("VisitProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitProjectId"));

                    b.Property<DateTime>("ExpectedTimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedTimeOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityOfVisit")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.Property<string>("VisitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisitProjectId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitProjects");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Visitor", b =>
                {
                    b.Property<int>("VisitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitorId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CredentialCardTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VisitorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisitorId");

                    b.HasIndex("CredentialCardTypeId");

                    b.ToTable("Visitors");

                    b.HasData(
                        new
                        {
                            VisitorId = 1,
                            CompanyName = "Romaguera Group",
                            CreatedDate = new DateTime(2024, 9, 4, 16, 7, 17, 129, DateTimeKind.Unspecified).AddTicks(2173),
                            CredentialCardTypeId = 2,
                            CredentialsCard = "1tspxqjjb4",
                            PhoneNumber = "0853154255",
                            Status = false,
                            UpdatedDate = new DateTime(2024, 9, 4, 16, 7, 17, 129, DateTimeKind.Unspecified).AddTicks(2173),
                            VisitorName = "Dolly Skiles"
                        },
                        new
                        {
                            VisitorId = 2,
                            CompanyName = "Schulist LLC",
                            CreatedDate = new DateTime(2024, 9, 16, 0, 7, 28, 979, DateTimeKind.Unspecified).AddTicks(4044),
                            CredentialCardTypeId = 2,
                            CredentialsCard = "vof4gxkegy",
                            PhoneNumber = "0352895765",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 9, 16, 0, 7, 28, 979, DateTimeKind.Unspecified).AddTicks(4044),
                            VisitorName = "Moises Tremblay"
                        },
                        new
                        {
                            VisitorId = 3,
                            CompanyName = "Berge, Rempel and Kirlin",
                            CreatedDate = new DateTime(2024, 9, 7, 9, 46, 16, 558, DateTimeKind.Unspecified).AddTicks(9409),
                            CredentialCardTypeId = 2,
                            CredentialsCard = "2ker7sltyx",
                            PhoneNumber = "0487063541",
                            Status = false,
                            UpdatedDate = new DateTime(2024, 9, 7, 9, 46, 16, 558, DateTimeKind.Unspecified).AddTicks(9409),
                            VisitorName = "Norval Ebert"
                        },
                        new
                        {
                            VisitorId = 4,
                            CompanyName = "Lehner Inc",
                            CreatedDate = new DateTime(2024, 9, 14, 6, 32, 2, 626, DateTimeKind.Unspecified).AddTicks(957),
                            CredentialCardTypeId = 1,
                            CredentialsCard = "rnfqv2zswh",
                            PhoneNumber = "0421454373",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 9, 14, 6, 32, 2, 626, DateTimeKind.Unspecified).AddTicks(957),
                            VisitorName = "Rafael Hamill"
                        },
                        new
                        {
                            VisitorId = 5,
                            CompanyName = "Balistreri Group",
                            CreatedDate = new DateTime(2024, 9, 8, 9, 31, 49, 295, DateTimeKind.Unspecified).AddTicks(993),
                            CredentialCardTypeId = 2,
                            CredentialsCard = "woc9ydwtvc",
                            PhoneNumber = "0874583943",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 9, 8, 9, 31, 49, 295, DateTimeKind.Unspecified).AddTicks(993),
                            VisitorName = "Karlee Vandervort"
                        },
                        new
                        {
                            VisitorId = 6,
                            CompanyName = "Price LLC",
                            CreatedDate = new DateTime(2024, 9, 16, 3, 7, 57, 301, DateTimeKind.Unspecified).AddTicks(7397),
                            CredentialCardTypeId = 1,
                            CredentialsCard = "cqt3bszjac",
                            PhoneNumber = "0205930983",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 9, 16, 3, 7, 57, 301, DateTimeKind.Unspecified).AddTicks(7397),
                            VisitorName = "Aletha Adams"
                        },
                        new
                        {
                            VisitorId = 7,
                            CompanyName = "Mitchell Inc",
                            CreatedDate = new DateTime(2024, 9, 14, 6, 16, 5, 125, DateTimeKind.Unspecified).AddTicks(8166),
                            CredentialCardTypeId = 2,
                            CredentialsCard = "lnrh20nehg",
                            PhoneNumber = "0105094296",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 9, 14, 6, 16, 5, 125, DateTimeKind.Unspecified).AddTicks(8166),
                            VisitorName = "Ora Hammes"
                        },
                        new
                        {
                            VisitorId = 8,
                            CompanyName = "Crona - Crona",
                            CreatedDate = new DateTime(2024, 9, 20, 3, 10, 56, 926, DateTimeKind.Unspecified).AddTicks(6022),
                            CredentialCardTypeId = 2,
                            CredentialsCard = "g8mhkv72oi",
                            PhoneNumber = "0405291221",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 9, 20, 3, 10, 56, 926, DateTimeKind.Unspecified).AddTicks(6022),
                            VisitorName = "Clint Armstrong"
                        },
                        new
                        {
                            VisitorId = 9,
                            CompanyName = "Goldner, Waelchi and Weimann",
                            CreatedDate = new DateTime(2024, 9, 6, 7, 5, 34, 779, DateTimeKind.Unspecified).AddTicks(8203),
                            CredentialCardTypeId = 1,
                            CredentialsCard = "p2tv37h9o7",
                            PhoneNumber = "0783746442",
                            Status = true,
                            UpdatedDate = new DateTime(2024, 9, 6, 7, 5, 34, 779, DateTimeKind.Unspecified).AddTicks(8203),
                            VisitorName = "Imogene Carter"
                        },
                        new
                        {
                            VisitorId = 10,
                            CompanyName = "Farrell - Konopelski",
                            CreatedDate = new DateTime(2024, 9, 10, 23, 8, 58, 907, DateTimeKind.Unspecified).AddTicks(9205),
                            CredentialCardTypeId = 2,
                            CredentialsCard = "8e4z58pck4",
                            PhoneNumber = "0866640852",
                            Status = false,
                            UpdatedDate = new DateTime(2024, 9, 10, 23, 8, 58, 907, DateTimeKind.Unspecified).AddTicks(9205),
                            VisitorName = "Hellen Deckow"
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitorSession", b =>
                {
                    b.Property<int>("VisitorSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitorSessionId"));

                    b.Property<DateTime>("CheckinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckoutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GateId")
                        .HasColumnType("int");

                    b.Property<int>("QRCardId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityID")
                        .HasColumnType("int");

                    b.Property<int>("VisitDetailId")
                        .HasColumnType("int");

                    b.HasKey("VisitorSessionId");

                    b.HasIndex("GateId");

                    b.HasIndex("QRCardId");

                    b.HasIndex("SecurityID");

                    b.HasIndex("VisitDetailId");

                    b.ToTable("VisitorSessions");

                    b.HasData(
                        new
                        {
                            VisitorSessionId = 1,
                            CheckinTime = new DateTime(2024, 9, 21, 12, 48, 23, 930, DateTimeKind.Utc).AddTicks(2386),
                            CheckoutTime = new DateTime(2024, 9, 23, 0, 48, 23, 930, DateTimeKind.Utc).AddTicks(2386),
                            GateId = 2,
                            QRCardId = 6,
                            SecurityID = 5,
                            VisitDetailId = 7
                        },
                        new
                        {
                            VisitorSessionId = 2,
                            CheckinTime = new DateTime(2024, 9, 21, 12, 48, 23, 930, DateTimeKind.Utc).AddTicks(4073),
                            CheckoutTime = new DateTime(2024, 9, 23, 0, 48, 23, 930, DateTimeKind.Utc).AddTicks(4073),
                            GateId = 2,
                            QRCardId = 10,
                            SecurityID = 5,
                            VisitDetailId = 4
                        },
                        new
                        {
                            VisitorSessionId = 3,
                            CheckinTime = new DateTime(2024, 9, 21, 12, 48, 23, 930, DateTimeKind.Utc).AddTicks(4090),
                            CheckoutTime = new DateTime(2024, 9, 23, 0, 48, 23, 930, DateTimeKind.Utc).AddTicks(4090),
                            GateId = 1,
                            QRCardId = 1,
                            SecurityID = 5,
                            VisitDetailId = 9
                        },
                        new
                        {
                            VisitorSessionId = 4,
                            CheckinTime = new DateTime(2024, 9, 21, 12, 48, 23, 930, DateTimeKind.Utc).AddTicks(4099),
                            CheckoutTime = new DateTime(2024, 9, 23, 0, 48, 23, 930, DateTimeKind.Utc).AddTicks(4099),
                            GateId = 2,
                            QRCardId = 9,
                            SecurityID = 5,
                            VisitDetailId = 3
                        },
                        new
                        {
                            VisitorSessionId = 5,
                            CheckinTime = new DateTime(2024, 9, 21, 12, 48, 23, 930, DateTimeKind.Utc).AddTicks(4108),
                            CheckoutTime = new DateTime(2024, 9, 23, 0, 48, 23, 930, DateTimeKind.Utc).AddTicks(4108),
                            GateId = 2,
                            QRCardId = 3,
                            SecurityID = 5,
                            VisitDetailId = 7
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitorSessionsImage", b =>
                {
                    b.Property<int>("VisitorSessionsImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitorSessionsImageId"));

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisitorSessionId")
                        .HasColumnType("int");

                    b.HasKey("VisitorSessionsImageId");

                    b.HasIndex("VisitorSessionId");

                    b.ToTable("VisitorSessionsImages");

                    b.HasData(
                        new
                        {
                            VisitorSessionsImageId = 1,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/1_1.jpg",
                            Name = "Image_1_1",
                            VisitorSessionId = 1
                        },
                        new
                        {
                            VisitorSessionsImageId = 2,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/1_2.jpg",
                            Name = "Image_1_2",
                            VisitorSessionId = 1
                        },
                        new
                        {
                            VisitorSessionsImageId = 3,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/1_3.jpg",
                            Name = "Image_1_3",
                            VisitorSessionId = 1
                        },
                        new
                        {
                            VisitorSessionsImageId = 4,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/2_1.jpg",
                            Name = "Image_2_1",
                            VisitorSessionId = 2
                        },
                        new
                        {
                            VisitorSessionsImageId = 5,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/2_2.jpg",
                            Name = "Image_2_2",
                            VisitorSessionId = 2
                        },
                        new
                        {
                            VisitorSessionsImageId = 6,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/2_3.jpg",
                            Name = "Image_2_3",
                            VisitorSessionId = 2
                        },
                        new
                        {
                            VisitorSessionsImageId = 7,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/3_1.jpg",
                            Name = "Image_3_1",
                            VisitorSessionId = 3
                        },
                        new
                        {
                            VisitorSessionsImageId = 8,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/3_2.jpg",
                            Name = "Image_3_2",
                            VisitorSessionId = 3
                        },
                        new
                        {
                            VisitorSessionsImageId = 9,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/3_3.jpg",
                            Name = "Image_3_3",
                            VisitorSessionId = 3
                        },
                        new
                        {
                            VisitorSessionsImageId = 10,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/4_1.jpg",
                            Name = "Image_4_1",
                            VisitorSessionId = 4
                        },
                        new
                        {
                            VisitorSessionsImageId = 11,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/4_2.jpg",
                            Name = "Image_4_2",
                            VisitorSessionId = 4
                        },
                        new
                        {
                            VisitorSessionsImageId = 12,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/4_3.jpg",
                            Name = "Image_4_3",
                            VisitorSessionId = 4
                        },
                        new
                        {
                            VisitorSessionsImageId = 13,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/5_1.jpg",
                            Name = "Image_5_1",
                            VisitorSessionId = 5
                        },
                        new
                        {
                            VisitorSessionsImageId = 14,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/5_2.jpg",
                            Name = "Image_5_2",
                            VisitorSessionId = 5
                        },
                        new
                        {
                            VisitorSessionsImageId = 15,
                            ImageType = "jpg",
                            ImageURL = "https://example.com/images/5_3.jpg",
                            Name = "Image_5_3",
                            VisitorSessionId = 5
                        });
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.DepartmentReason", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.Department", "Department")
                        .WithMany("DepartmentReason")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.Reason", "Reason")
                        .WithMany("DepartmentReason")
                        .HasForeignKey("ReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Reason");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.NotificationUsers", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.Notification", "Notification")
                        .WithMany("NotificationUsers")
                        .HasForeignKey("NotificationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.User", "Receiver")
                        .WithMany("ReceivedNotifications")
                        .HasForeignKey("ReceiverID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.User", "Sender")
                        .WithMany("SentNotifications")
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Project", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.User", "User")
                        .WithMany("Project")
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.QRCard", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.QRCardStatus", "QRCardStatus")
                        .WithMany("QRCards")
                        .HasForeignKey("QRCardStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.QRCardType", "QRCardType")
                        .WithMany("QRCards")
                        .HasForeignKey("QRCardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QRCardStatus");

                    b.Navigation("QRCardType");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.User", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.UserDepartment", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.Department", "Department")
                        .WithMany("UserDepartment")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.User", "User")
                        .WithMany("UserDepartment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VehicleSession", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.Gate", "Gate")
                        .WithMany("VehicleSession")
                        .HasForeignKey("GateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.User", "Security")
                        .WithMany("VehicleSession")
                        .HasForeignKey("SecurityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.VisitDetail", "VisitDetail")
                        .WithMany("VehicleSession")
                        .HasForeignKey("VisitDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gate");

                    b.Navigation("Security");

                    b.Navigation("VisitDetail");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VehicleSessionImage", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.VehicleSession", "VehicleSession")
                        .WithMany("Images")
                        .HasForeignKey("VehicleSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleSession");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Visit", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.User", "CreateBy")
                        .WithMany("CreatedVisits")
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.DepartmentReason", "DepartmentReason")
                        .WithMany("Visits")
                        .HasForeignKey("DepartmentReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.User", "UpdateBy")
                        .WithMany("UpdatedVisits")
                        .HasForeignKey("UpdateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreateBy");

                    b.Navigation("DepartmentReason");

                    b.Navigation("UpdateBy");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitDetail", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.Visit", "Visit")
                        .WithMany("VisitDetail")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.Visitor", "Visitor")
                        .WithMany("VisitDetail")
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitProject", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.Project", "Project")
                        .WithMany("VisitProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.Visit", "Visit")
                        .WithMany("VisitProject")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Visitor", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.CredentialCardType", "CredentialCardType")
                        .WithMany("Visitor")
                        .HasForeignKey("CredentialCardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CredentialCardType");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitorSession", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.Gate", "Gate")
                        .WithMany("VisitorSession")
                        .HasForeignKey("GateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.QRCard", "QRCard")
                        .WithMany("VisitorSession")
                        .HasForeignKey("QRCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.User", "Security")
                        .WithMany("VisitorSession")
                        .HasForeignKey("SecurityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecurityGateApv.Domain.Models.VisitDetail", "VisitDetail")
                        .WithMany("VisitorSession")
                        .HasForeignKey("VisitDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gate");

                    b.Navigation("QRCard");

                    b.Navigation("Security");

                    b.Navigation("VisitDetail");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitorSessionsImage", b =>
                {
                    b.HasOne("SecurityGateApv.Domain.Models.VisitorSession", "VisitorSession")
                        .WithMany("Images")
                        .HasForeignKey("VisitorSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VisitorSession");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.CredentialCardType", b =>
                {
                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Department", b =>
                {
                    b.Navigation("DepartmentReason");

                    b.Navigation("UserDepartment");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.DepartmentReason", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Gate", b =>
                {
                    b.Navigation("VehicleSession");

                    b.Navigation("VisitorSession");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Notification", b =>
                {
                    b.Navigation("NotificationUsers");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Project", b =>
                {
                    b.Navigation("VisitProject");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.QRCard", b =>
                {
                    b.Navigation("VisitorSession");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.QRCardStatus", b =>
                {
                    b.Navigation("QRCards");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.QRCardType", b =>
                {
                    b.Navigation("QRCards");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Reason", b =>
                {
                    b.Navigation("DepartmentReason");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.User", b =>
                {
                    b.Navigation("CreatedVisits");

                    b.Navigation("Project");

                    b.Navigation("ReceivedNotifications");

                    b.Navigation("SentNotifications");

                    b.Navigation("UpdatedVisits");

                    b.Navigation("UserDepartment");

                    b.Navigation("VehicleSession");

                    b.Navigation("VisitorSession");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VehicleSession", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Visit", b =>
                {
                    b.Navigation("VisitDetail");

                    b.Navigation("VisitProject");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitDetail", b =>
                {
                    b.Navigation("VehicleSession");

                    b.Navigation("VisitorSession");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.Visitor", b =>
                {
                    b.Navigation("VisitDetail");
                });

            modelBuilder.Entity("SecurityGateApv.Domain.Models.VisitorSession", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
